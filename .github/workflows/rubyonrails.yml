name: CI RSpec tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: spanish_app_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          # runs 'bundle install' and caches installed gems automatically
          bundler-cache: true

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Set up database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/spanish_app_test
        run: |
          bin/rails db:create
          bin/rails db:migrate

      - name: Set up environment variables
        run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

      - name: Run tests
        run: bundle exec rspec

  # deploy:
  #   name: Deploy
  #   needs: [test]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Deploy to production
  #       uses: johnbeynon/render-deploy-action@v0.0.8
  #       with:
  #         service-id: ${{ secrets.RENDER_SERVICE_ID }}
  #         api-key: ${{ secrets.RENDER_API_KEY }}
  #         wait-for-success: true

  #     - name: Drop, create, migrate and seed database
  #       run: |
  #         bin/rails db:drop RAILS_ENV=production DISABLE_DATABASE_ENVIRONMENT_CHECK=1
  #         bin/rails db:create RAILS_ENV=production
  #         bin/rails db:migrate RAILS_ENV=production
  #         bin/rails db:seed RAILS_ENV=production
